USE SEMESTRAL;

SELECT * FROM PROVINCE;

EXEC SP_PROVINCE_GET;

-- crea tabla usuarios

CREATE TABLE USERS(
ID_USER INT IDENTITY(1,1) PRIMARY KEY,
COD_USER VARCHAR(10) NOT NULL,
USE_NAME VARCHAR(50) NOT NULL,
USE_LASTNAME VARCHAR(50) NOT NULL,
USE_EMAIL VARCHAR(50) NOT NULL,
USE_PHONE VARCHAR(50) NOT NULL,
USE_ADDRESS VARCHAR(50) NOT NULL,
USE_SALARIE DECIMAL(10,2) NOT NULL,
ID_DITRICT INT NOT NULL,
ID_STATE INT NOT NULL,
TYPE_USER VARCHAR(50) NOT NULL)
 
 -- ADD COLUMNS
 ALTER TABLE USERS ADD ID_PROVINCE INT NULL;
 ALTER TABLE USERS ADD USE_IDENT VARCHAR(50) NULL;

 --ALTER TABLE USERS ALTER COLUMN ID_PROVINCE INT NOT NULL;
 -- CREATESP GET USERS
 CREATE PROCEDURE SP_USERS_GET_BY_ID
 @COD_USER VARCHAR(10),
 @TYPE_USER VARCHAR(50)
AS
BEGIN
	SELECT ID_USER
		   , COD_USER 
		   , USE_NAME 
		   , USE_LASTNAME
		   , USE_EMAIL 
		   , USE_PHONE 
		   , USE_ADDRESS 
		   , USE_SALARIE 
		   , ID_DITRICT 
		   , ID_STATE 
	FROM USERS
	WHERE TYPE_USER = @TYPE_USER
	AND (COD_USER = @COD_USER);
END;

-- CREATE SP USERS NEW

CREATE PROCEDURE SP_USERS_NEW
@COD_USER VARCHAR(10),
@USE_NAME VARCHAR(50),
@USE_LASTNAME VARCHAR(50),
@USE_EMAIL VARCHAR(50),
@USE_PHONE VARCHAR(50),
@USE_ADDRESS VARCHAR(50),
@USE_SALARIE DECIMAL(10,2),
@ID_DITRICT INT,
@ID_STATE INT,
@TYPE_USER VARCHAR(50),
@ID_PROVINCE INT,
@USE_IDENT VARCHAR(50)
AS
BEGIN
	INSERT INTO USERS (COD_USER 
		   , USE_NAME 
		   , USE_LASTNAME
		   , USE_EMAIL 
		   , USE_PHONE 
		   , USE_ADDRESS 
		   , USE_SALARIE 
		   , ID_DITRICT 
		   , ID_STATE
		   , TYPE_USER
		   , ID_PROVINCE
		   , USE_IDENT)
		   VALUES (@COD_USER 
		   , @USE_NAME 
		   , @USE_LASTNAME
		   , @USE_EMAIL 
		   , @USE_PHONE 
		   , @USE_ADDRESS 
		   , @USE_SALARIE 
		   , @ID_DITRICT 
		   , @ID_STATE
		   , @TYPE_USER
		   , @ID_PROVINCE
		   , @USE_IDENT);
END;
INSERT INTO USERS (COD_USER 
		   , USE_NAME 
		   , USE_LASTNAME
		   , USE_EMAIL 
		   , USE_PHONE 
		   , USE_ADDRESS 
		   , USE_SALARIE 
		   , ID_DITRICT 
		   , ID_STATE
		   , TYPE_USER)
		   VALUES ('1001', 'JUAN', 'PEREZ', 'JPERES@UNIVERSIDAD.COM', '6421-2031', 'Panama, Panamá', 1000, 1, 1, 'Profesor')


-- CREATE SP USERS UPDATE
CREATE PROCEDURE SP_USERS_UPDATE
@COD_USER VARCHAR(10),
@USE_NAME VARCHAR(50),
@USE_LASTNAME VARCHAR(50),
@USE_EMAIL VARCHAR(50),
@USE_PHONE VARCHAR(50),
@USE_ADDRESS VARCHAR(50),
@USE_SALARIE DECIMAL(10,2),
@ID_DITRICT INT,
@ID_STATE INT,
@TYPE_USER VARCHAR(50),
@ID_PROVINCE INT,
@USE_IDENT VARCHAR(50)
AS
BEGIN
	UPDATE USERS SET USE_NAME = @USE_NAME
		   , USE_LASTNAME = @USE_LASTNAME
		   , USE_EMAIL = @USE_EMAIL
		   , USE_PHONE = @USE_PHONE
		   , USE_ADDRESS = @USE_ADDRESS
		   , USE_SALARIE = @USE_SALARIE
		   , ID_DITRICT = @ID_DITRICT
		   , ID_STATE = @ID_STATE
		   , TYPE_USER = @TYPE_USER
		   , ID_PROVINCE = @ID_PROVINCE
		   , USE_IDENT = @USE_IDENT
	WHERE COD_USER = @COD_USER;
END;


 CREATE PROCEDURE [dbo].[SP_USERS_GET]
 @TYPE_USER VARCHAR(50)
AS
BEGIN
	SELECT US.ID_USER
		   , US.COD_USER 
		   , US.USE_NAME 
		   , US.USE_LASTNAME
		   , US.USE_EMAIL 
		   , US.USE_PHONE 
		   , US.USE_ADDRESS 
		   , US.USE_SALARIE 
		   , US.ID_DITRICT 
, DI.DIS_NAME
		   , CASE US.ID_STATE  WHEN '1' THEN 'Activo' else 'Inactivo' END AS STA_NAME	
		   , US.ID_PROVINCE
		   , PR.PRO_NAME
		   , US.USE_IDENT

	FROM USERS US
	INNER JOIN PROVINCE PR ON PR.ID_PROVINCE = US.ID_PROVINCE
	INNER JOIN DISTRICT DI ON DI.ID_DISTRICT = US.ID_DITRICT
	WHERE TYPE_USER = @TYPE_USER;
END;


-- CREATE TABLA FACULTAD
CREATE TABLE FACULTY(
ID_FACULTY INT IDENTITY(1,1) PRIMARY KEY,
FAC_NAME VARCHAR(50) NOT NULL,
FAC_CODIGO VARCHAR(2) NOT NULL
)

-- CREATE SP FACULTY GET
CREATE PROCEDURE SP_FACULTY_GET
AS
BEGIN
	SELECT ID_FACULTY, FAC_NAME, FAC_CODIGO FROM FACULTY;
END;

-- CREATE SP FACULTY BY ID
CREATE PROCEDURE SP_FACULTY_GET_BY_ID
@ID_FACULTY INT
AS
BEGIN
	SELECT ID_FACULTY, FAC_NAME, FAC_CODIGO FROM FACULTY WHERE ID_FACULTY = @ID_FACULTY;
END;

-- CREATE SP FACULTY NEW
CREATE PROCEDURE SP_FACULTY_NEW
@FAC_NAME VARCHAR(50),
@FAC_CODIGO VARCHAR(2)
AS
BEGIN
	INSERT INTO FACULTY (FAC_NAME, FAC_CODIGO) VALUES (@FAC_NAME, @FAC_CODIGO);
END;

-- crea tabla carreras de la facultad
CREATE TABLE CAREER(
ID_CAREER INT IDENTITY(1,1) PRIMARY KEY,
CAR_NAME VARCHAR(50) NOT NULL,
CAR_CODIGO VARCHAR(2) NOT NULL,
ID_FACULTY INT NOT NULL
)

-- CREATE SP CAREER GET
CREATE PROCEDURE SP_CAREER_GET
AS
BEGIN
	SELECT ID_CAREER, CAR_NAME, CAR_CODIGO, ID_FACULTY FROM CAREER;
END;

-- CREATE SP CAREER BY ID
CREATE PROCEDURE SP_CAREER_GET_BY_ID
@ID_CAREER INT
AS
BEGIN
	SELECT ID_CAREER, CAR_NAME, CAR_CODIGO, ID_FACULTY FROM CAREER WHERE ID_CAREER = @ID_CAREER;
END;

-- CREATE SP CAREER NEW
CREATE PROCEDURE SP_CAREER_NEW
@CAR_NAME VARCHAR(50),
@CAR_CODIGO VARCHAR(2),
@ID_FACULTY INT
AS
BEGIN
	INSERT INTO CAREER (CAR_NAME, CAR_CODIGO, ID_FACULTY) VALUES (@CAR_NAME, @CAR_CODIGO, @ID_FACULTY);
END;


